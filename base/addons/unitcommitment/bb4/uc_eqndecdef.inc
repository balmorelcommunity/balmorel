* UC Translated to BB4 by Juan Gea Berm√∫dez 2018.

EQUATION  QUCVUCON(Y,AAA,G,S,T)    'Unit commitment: Number of endogenous units on limited by unit size and capacity)';
EQUATION  QUCVUCON_STOLOAD(Y,AAA,G,S,T)    'Unit commitment: Number of endogenous units on limited by unit size and capacity) for storage technologies';
EQUATION  QUCVUCU(Y,AAA,G,S,T)     'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)';
EQUATION  QUCVUCU_STOLOAD(Y,AAA,G,S,T)     'Unit commitment: Number of start up endogenous units on limited by unit size and capacity) for storage technologies';
EQUATION  QUCVUCD(Y,AAA,G,S,T)     'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)';
EQUATION  QUCVUCD_STOLOAD(Y,AAA,G,S,T)     'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity) for storage technologies';
EQUATION  QUCSTARTQ(Y,AAA,G,S,T)   'Unit commitment: on-off logic';
EQUATION  QUCSTARTQ_STOLOAD_INTRA(Y,AAA,G,S,T)   'Unit commitment: on-off logic for intraseasonal storage technologies';
EQUATION  QUCSTARTQ_STOLOAD_INTER(Y,AAA,G,S,T)   'Unit commitment: on-off logic for interseasonal storage technologies';
EQUATION  QUCMAXVGF(Y,AAA,G,S,T)   'Unit commitment: Fuel consumption below maximum (of units online)';
EQUATION  QUCMAXVGF_STOLOAD(Y,AAA,G,S,T)   'Unit commitment: Fuel consumption below maximum for storage technologies (of units online)';
$ifi %COMBTECH%==yes EQUATION  QUCMAXVGF_ECOMBGUP(Y,AAA,G,S,T) 'Unit commitment: Bounds on individual units are assigned individually to .UP, however, the sum-of-bounds may exceed 1';
$ifi %COMBTECH%==yes EQUATION  QUCMAXVGF_HCOMBGUP(Y,AAA,G,S,T) 'Unit commitment: Bounds on individual units are assigned individually to .UP, however, the sum-of-bounds may exceed 1';

QUCVUCON(IY411,IA,IGUC,IS3,T)$(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC))..  !! 'Unit commitment: Number of endogenous units on limited by unit size and capacity)'
VUCON(IY411,IA,IGUC,IS3,T)
$ifi %PLANNED_MAINTENANCE%==yes  + VUCONMAINT(IY411,IA,IGUC,IS3)$IGPLANMAINT(IGUC)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')*(1$(NOT IGKRATE(IA,IGUC,IS3,T)) + IGKRATE(IA,IGUC,IS3,T))
;

QUCVUCON_STOLOAD(IY411,IA,IGUC,IS3,T)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND (IGESTOALL(IGUC) OR IGHSTOALL(IGUC)))..  !! 'Unit commitment: Number of endogenous units on limited by unit size and capacity)'
VUCON_STOLOAD(IY411,IA,IGUC,IS3,T)
$ifi %PLANNED_MAINTENANCE%==yes  + VUCONMAINT(IY411,IA,IGUC,IS3)$IGPLANMAINT(IGUC)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')*(1$(NOT IGKRATE(IA,IGUC,IS3,T)) + IGKRATE(IA,IGUC,IS3,T))
;

QUCVUCU(IY411,IA,IGUC,IS3,T)$(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC))..  !! 'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)'
VUCU(IY411,IA,IGUC,IS3,T)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCU_STOLOAD(IY411,IA,IGUC,IS3,T)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND (IGESTOALL(IGUC) OR IGHSTOALL(IGUC)))..  !! 'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)'
VUCU_STOLOAD(IY411,IA,IGUC,IS3,T)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCD(IY411,IA,IGUC,IS3,T)$(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC))..  !! 'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)'
VUCD(IY411,IA,IGUC,IS3,T)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCD_STOLOAD(IY411,IA,IGUC,IS3,T)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND (IGESTOALL(IGUC) OR IGHSTOALL(IGUC)))..  !! 'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)'
VUCD_STOLOAD(IY411,IA,IGUC,IS3,T)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCSTARTQ(IY411,IA,IGUC,S,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S)
$ifi      %SEASONALLINKUC%==yes         AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))
$ifi not  %SEASONALLINKUC%==yes         AND (NOT (ORD(T) EQ 1))
)..   !! 'Unit commitment: on-off logic'
   VUCU(IY411,IA,IGUC,S,T) - VUCD(IY411,IA,IGUC,S,T)
    =E=
   VUCON(IY411,IA,IGUC,S,T)
$ifi not %SEASONALLINKUC%==yes  - VUCON(IY411,IA,IGUC,S,T-1)
$ifi %SEASONALLINKUC%==yes      - VUCON(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1)  - VUCON(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))

$include "../../base/addons/_hooks/qucstartq.inc"
;

QUCSTARTQ_STOLOAD_INTRA(IY411,IA,IGUC,S,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S) AND (IGESTO(IGUC) OR IGHSTO(IGUC)) AND (NOT (ORD(T) EQ 1))
)..   !! 'Unit commitment: on-off logic'
   VUCU_STOLOAD(IY411,IA,IGUC,S,T) - VUCD_STOLOAD(IY411,IA,IGUC,S,T)
    =E=
   VUCON_STOLOAD(IY411,IA,IGUC,S,T)
- VUCON_STOLOAD(IY411,IA,IGUC,S,T-1)

$include "../../base/addons/_hooks/qucstartq_stoload_intra.inc"
;

QUCSTARTQ_STOLOAD_INTER(IY411,IA,IGUC,S,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S) AND (IGESTOS(IGUC) OR IGHSTOS(IGUC))
$ifi      %SEASONALLINKUC%==yes         AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))
$ifi not  %SEASONALLINKUC%==yes         AND (NOT (ORD(T) EQ 1))
)..   !! 'Unit commitment: on-off logic'
   VUCU_STOLOAD(IY411,IA,IGUC,S,T) - VUCD_STOLOAD(IY411,IA,IGUC,S,T)
    =E=
   VUCON_STOLOAD(IY411,IA,IGUC,S,T)
$ifi not %SEASONALLINKUC%==yes  - VUCON_STOLOAD(IY411,IA,IGUC,S,T-1)
$ifi %SEASONALLINKUC%==yes      - VUCON_STOLOAD(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1)  - VUCON_STOLOAD(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))

$include "../../base/addons/_hooks/qucstartq_stoload_inter.inc"
;

QUCMAXVGF(IY411,IA,IGUC,IS3,T)$IAGK_HASORPOT(IY411,IA,IGUC)..    !! 'Unit commitment: Fuel consumption below maximum (of units online)'
   VUCON(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
         /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC)))
    =G=
   VGF_T(IY411,IA,IGUC,IS3,T)
$ifi %COMBTECH%==yes + sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,IS3,T))$IGCOMB1(IGUC)

$include "../../base/addons/_hooks/qucmaxvgf.inc"
;

QUCMAXVGF_STOLOAD(IY411,IA,IGUC,IS3,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND (IGESTOALL(IGUC) OR IGHSTOALL(IGUC)))..
   VUCON_STOLOAD(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCUNITSIZE')/GDATA(IGUC,'GDSTOHLOAD')
             =G=
+(VESTOLOADT(IY411,IA,IGUC,IS3,T))$IGESTO(IGUC)
+(VESTOLOADTS(IY411,IA,IGUC,IS3,T))$IGESTOS(IGUC)
+(VHSTOLOADT(IY411,IA,IGUC,IS3,T))$IGHSTO(IGUC)
+(VHSTOLOADTS(IY411,IA,IGUC,IS3,T))$IGHSTOS(IGUC)
;

$ifi NOT %COMBTECH%==yes $goto NO_COMBTECH
* Bounds on individual units are assigned individually to .UP, however, the sum-of-bounds may exceed 1
QUCMAXVGF_ECOMBGUP(IY411,IA,IGCOMB1,IS3,T)$(IAGK_HASORPOT(IY411,IA,IGCOMB1) AND GDATA(IGCOMB1,'GDCOMBGUP') AND IGKE(IGCOMB1) AND IGUC(IGCOMB1))..
   VUCON(IY411,IA,IGCOMB1,IS3,T)*GDATA(IGCOMB1,'GDUCUNITSIZE')/(1$((NOT IGESTO(IGCOMB1)) AND (NOT IGESTOS(IGCOMB1)) AND (NOT IGHSTO(IGCOMB1)) AND (NOT IGHSTOS(IGCOMB1))) + GDATA(IGCOMB1,'GDSTOHUNLD')$(IGESTO(IGCOMB1) OR IGESTOS(IGCOMB1) OR IGHSTO(IGCOMB1) OR IGHSTOS(IGCOMB1)))
          =G=
  VGE_T(IY411,IA,IGCOMB1,IS3,T) + SUM(IGCOMB2$GGCOMB(IGCOMB1,IGCOMB2), VGE_T(IY411,IA,IGCOMB2,IS3,T))
;

* Bounds on individual units are assigned individually to .UP, however, the sum-of-bounds may exceed 1
QUCMAXVGF_HCOMBGUP(IY411,IA,IGCOMB1,IS3,T)$(IAGK_HASORPOT(IY411,IA,IGCOMB1) AND GDATA(IGCOMB1,'GDCOMBGUP') AND IGKH(IGCOMB1) AND IGUC(IGCOMB1))..
   VUCON(IY411,IA,IGCOMB1,IS3,T)*GDATA(IGCOMB1,'GDUCUNITSIZE')/(1$((NOT IGESTO(IGCOMB1)) AND (NOT IGESTOS(IGCOMB1)) AND (NOT IGHSTO(IGCOMB1)) AND (NOT IGHSTOS(IGCOMB1))) + GDATA(IGCOMB1,'GDSTOHUNLD')$(IGESTO(IGCOMB1) OR IGESTOS(IGCOMB1) OR IGHSTO(IGCOMB1) OR IGHSTOS(IGCOMB1)))
          =G=
  VGH_T(IY411,IA,IGCOMB1,IS3,T) + SUM(IGCOMB2$GGCOMB(IGCOMB1,IGCOMB2), VGH_T(IY411,IA,IGCOMB2,IS3,T))
;
$label NO_COMBTECH


$ifi not %MINFUELCONS%==yes $goto MINFUELCONS_END

EQUATION  QUCMINVGF(Y,AAA,G,S,T)   'Unit commitment: Fuel consumption above minimum(of units online)';

QUCMINVGF(IY411,IA,IGUC,IS3,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND (GDATA(IGUC,'GDUCGMIN')
$ifi %ANC_SERV%==yes  OR IASFCRUP(IGUC)  OR IASAFRRUP(IGUC)   OR IASFCRDOWN(IGUC)    OR IASAFRRDOWN(IGUC)
)
)..  !! 'Unit commitment: Fuel consumption above minimum (of units online)'
   VGF_T(IY411,IA,IGUC,IS3,T)
$ifi %COMBTECH%==yes + sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,IS3,T))$IGCOMB1(IGUC)

    =G=
* Fuel consumption at minimum load is defined by Fmin = [ Emin (1-F0) +Emax*F0 ]/FE
  (
* Emin
   VUCON(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCGMIN')*GDATA(IGUC,'GDUCUNITSIZE')*(1-GDATA(IGUC,'GDUCF0'))
* Emax
   +VUCON(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCUNITSIZE')*GDATA(IGUC,'GDUCF0')
* FE
   )*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC)))
$include "../../base/addons/_hooks/qucminvgf.inc"
;

EQUATION  QUCMINVGF_STOLOAD(Y,AAA,G,S,T)   'Unit commitment: Fuel consumption above minimum for storage technologies (of units online)';

QUCMINVGF_STOLOAD(IY411,IA,IGUC,IS3,T)$(IAGK_HASORPOT(IY411,IA,IGUC) AND GDATA(IGUC,'GDUCGMIN') AND (IGESTOALL(IGUC) OR IGHSTOALL(IGUC)))..  !! 'Unit commitment: Fuel consumption above minimum (of units online)'

+(VESTOLOADT(IY411,IA,IGUC,IS3,T))$IGESTO(IGUC)
+(VESTOLOADTS(IY411,IA,IGUC,IS3,T))$IGESTOS(IGUC)
+(VHSTOLOADT(IY411,IA,IGUC,IS3,T))$IGHSTO(IGUC)
+(VHSTOLOADTS(IY411,IA,IGUC,IS3,T))$IGHSTOS(IGUC)
    =G=
* Fuel consumption at minimum load is defined by Fmin = [ Emin (1-F0) +Emax*F0 ]/FE
  (
* Emin
   VUCON_STOLOAD(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCGMIN')*GDATA(IGUC,'GDUCUNITSIZE')*(1-GDATA(IGUC,'GDUCF0'))
* Emax
   +VUCON_STOLOAD(IY411,IA,IGUC,IS3,T)*GDATA(IGUC,'GDUCUNITSIZE')*GDATA(IGUC,'GDUCF0')
* FE
   )/GDATA(IGUC,'GDSTOHLOAD')
;

$label  MINFUELCONS_END

$ifi not %MINSTARTUPTIME%==yes $goto MINSTARTUPTIME_END

EQUATION  QUCUT(Y,AAA,G,S,T)      'Unit commitment: Number of unit startups respecting minimum on time';

QUCUT(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCUTMIN') GT CHRONOHOUR(S,T)) AND IS3(S))..
* units start up at t
$ifi not %SEASONALLINKUC%==yes  SUM(IUCT$(ORD(IUCT) LE GDATA(IGUC,'GDUCUTMIN')/CHRONOHOUR(S,T)),VUCU(IY411,IA,IGUC,S,T-(ORD(IUCT)-1)))
$ifi %SEASONALLINKUC%==yes      SUM((ISALIAS,ITALIAS)$((GDATA(IGUC,'GDUCUTMIN')-(IHOURST(S,T)-IHOURST(ISALIAS,ITALIAS))/CHRONOHOUR(S,T) GE -0.5) AND ((IHOURST(S,T)-IHOURST(ISALIAS,ITALIAS)) GE 0) AND (ORD(ISALIAS) LE ORD(S))), VUCU(IY411,IA,IGUC,ISALIAS,ITALIAS))

         =L=
         VUCON(IY411,IA,IGUC,S,T)
$include "../../base/addons/_hooks/qucut.inc"
;

$label  MINSTARTUPTIME_END

$ifi not %MINSHUTDOWNTIME%==yes $goto MINSHUTDOWNTIME_END

EQUATION  QUCDT(Y,AAA,G,S,T)  'Unit commitment: Number of unit shutdowns respecting minimum off time';

QUCDT(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((GDATA(IGUC,'GDUCDTMIN') GT CHRONOHOUR(S,T)) AND IS3(S))..
* units shut down at t
$ifi not %SEASONALLINKUC%==yes   SUM(IUCT$(ORD(IUCT) LE GDATA(IGUC,'GDUCDTMIN')/CHRONOHOUR(S,T)), VUCD(IY411,IA,IGUC,S,T-(ORD(IUCT)-1)))
$ifi %SEASONALLINKUC%==yes      SUM((ISALIAS,ITALIAS)$((GDATA(IGUC,'GDUCDTMIN')-(IHOURST(S,T)-IHOURST(ISALIAS,ITALIAS))/CHRONOHOUR(S,T) GE -0.5) AND ((IHOURST(S,T)-IHOURST(ISALIAS,ITALIAS)) GE 0) AND (ORD(ISALIAS) LE ORD(S))), VUCD(IY411,IA,IGUC,ISALIAS,ITALIAS))

         =L=
         (GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
         +VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC))) / GDATA(IGUC,'GDUCUNITSIZE')
         -VUCON(IY411,IA,IGUC,S,T)
*Rounding up assumption when investments and decommissioning are not allowed
         +(1-0.001)$(NOT(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC))) AND NOT(IGDECOMEXOPOT(IY411,IA,IGUC)))
$include "../../base/addons/_hooks/qucdt.inc"
;

$label  MINSHUTDOWNTIME_END

$ifi %STEPWISE_RAMPING_UC%==no_ramping $goto STEPWISERAMPING_END

EQUATION  QUCRAMPU(Y,AAA,G,S,T)   'Unit commitment: Unit up-ramping below unit up-gradient for unit on and below minimum fuel consumption during unit startup.';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_UP_BALANCE (Y,AAA,G,S,T)       'Equation that balances the total ramping up for each timestep';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_UP_RATE_CAPABILITY(Y,AAA,G,RAMPING_RATE,S,T)   'Equation that limits the ramping up of each generation technologys ramping rate for each timestep';
EQUATION  QUCRAMPD(Y,AAA,G,S,T)   'Unit commitment: Unit down-ramping below unit down-gradient for unit on and below minimum fuel consumption during unit shutdown.';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_DOWN_BALANCE (Y,AAA,G,S,T)   'Equation that balances the total ramping down for each timestep';
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost EQUATION  QUCRAMPING_DOWN_RATE_CAPABILITY(Y,AAA,G,RAMPING_RATE,S,T) 'Equation that limits the ramping down of each generation technologys ramping rate for each timestep';

$ifi not %SEASONALLINKUC%==yes $goto STEPWISERAMPING_SEASONLINK_END

QUCRAMPU(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((1 GT CHRONOHOUR(S,T)*GDATA(IGUC,'GDUCRAMPU')) AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1))) AND IS3(S) AND GDATA(IGUC,'GDUCRAMPU'))..
* up gradient at t
-VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) - VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
    + VGF_T(IY411,IA,IGUC,S,T)
$ifi %COMBTECH%==yes - sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S-1,T--1)$(ORD(T) EQ 1)+ VGF_T(IY411,IA,IGCOMB2,S,T-1)$(NOT (ORD(T) EQ 1)))$IGCOMB1(IGUC)
$ifi %COMBTECH%==yes +sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S,T))$IGCOMB1(IGUC)
         =L=
     (
* units under start up have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCU(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under start up
        + GDATA(IGUC,'GDUCRAMPU')*(VUCON(IY411,IA,IGUC,S,T) - VUCU(IY411,IA,IGUC,S,T))
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$include "../../base/addons/_hooks/qucrampu.inc"
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_BALANCE(IY411,IA,IGUC,S,T)$((NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1))) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost -VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) - VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost +  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;


QUCRAMPD(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((1 GT CHRONOHOUR(S,T)*GDATA(IGUC,'GDUCRAMPD')) AND (NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1))) AND IS3(S) AND GDATA(IGUC,'GDUCRAMPD'))..
* down gradient at t
 +VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) + VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
    - VGF_T(IY411,IA,IGUC,S,T)

$ifi %COMBTECH%==yes + sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S-1,T--1)$(ORD(T) EQ 1)+ VGF_T(IY411,IA,IGCOMB2,S,T-1)$(NOT (ORD(T) EQ 1)))$IGCOMB1(IGUC)
$ifi %COMBTECH%==yes -sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S,T))$IGCOMB1(IGUC)
         =L=
     (
* units under shut down have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCD(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under shutdown
        + GDATA(IGUC,'GDUCRAMPD')*VUCON(IY411,IA,IGUC,S,T)
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$include "../../base/addons/_hooks/qucrampd.inc"
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_BALANCE (IY411,IA,IGUC,S,T)$((NOT (ORD(S) EQ 1 AND (ORD(T) EQ 1)))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost +VGF_T(IY411,IA,IGUC,S-1,T--1)$(ORD(T) EQ 1) + VGF_T(IY411,IA,IGUC,S,T-1)$(NOT (ORD(T) EQ 1))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost -  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$label  STEPWISERAMPING_SEASONLINK_END

$ifi %SEASONALLINKUC%==yes $goto STEPWISERAMPING_NOT_SEASON_LINK_END

QUCRAMPU(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((1 GT CHRONOHOUR(S,T)*GDATA(IGUC,'GDUCRAMPU')) AND (NOT (ORD(T) EQ 1)) AND IS3(S) AND GDATA(IGUC,'GDUCRAMPU'))..
* up gradient at t
- VGF_T(IY411,IA,IGUC,S,T-1)
    + VGF_T(IY411,IA,IGUC,S,T)
$ifi %COMBTECH%==yes - sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S,T-1))$IGCOMB1(IGUC)
$ifi %COMBTECH%==yes +sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S,T))$IGCOMB1(IGUC)

         =L=
     (
* units under start up have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCU(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under start up
        + GDATA(IGUC,'GDUCRAMPU')*(VUCON(IY411,IA,IGUC,S,T) - VUCU(IY411,IA,IGUC,S,T))
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_BALANCE(IY411,IA,IGUC,S,T)$((NOT (ORD(T) EQ 1))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost  - VGF_T(IY411,IA,IGUC,S,T-1)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost +  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_UP_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_UP(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_UP(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;


QUCRAMPD(IAGK_HASORPOT(IY411,IA,IGUC),S,T)$((1 GT CHRONOHOUR(S,T)*GDATA(IGUC,'GDUCRAMPD')) AND (NOT (ORD(T) EQ 1)) AND IS3(S) AND GDATA(IGUC,'GDUCRAMPD'))..
* down gradient at t
  + VGF_T(IY411,IA,IGUC,S,T-1)
    - VGF_T(IY411,IA,IGUC,S,T)
$ifi %COMBTECH%==yes + sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S,T-1))$IGCOMB1(IGUC)
$ifi %COMBTECH%==yes -sum(IGCOMB2$GGCOMB(IGUC,IGCOMB2),VGF_T(IY411,IA,IGCOMB2,S,T))$IGCOMB1(IGUC)
         =L=
     (
* units under shut down have an expanded gradient
         GDATA(IGUC,'GDUCGMIN')*VUCD(IY411,IA,IGUC,S,T)
* up gradient of units on at t excluding units under shutdown
        + GDATA(IGUC,'GDUCRAMPD')*VUCON(IY411,IA,IGUC,S,T)
* scale unit input capacity
     )*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
       /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_BALANCE (IY411,IA,IGUC,S,T)$((NOT (ORD(T) EQ 1))  AND IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost SUM(RAMPING_RATE,VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =G=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost + VGF_T(IY411,IA,IGUC,S,T-1)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost -  VGF_T(IY411,IA,IGUC,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost QUCRAMPING_DOWN_RATE_CAPABILITY (IY411,IA,IGUC,RAMPING_RATE,S,T)$((NOT (ORD(T) EQ 1)) AND IAGK_HASORPOT(IY411,IA,IGUC) AND IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE) AND IS3(S))..
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VRAMPING_DOWN(IY411,IA,IGUC,RAMPING_RATE,S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost =L=
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost VUCON(IY411,IA,IGUC,S,T)*IRAMPING_G_CAPABILITY_DOWN(IGUC,RAMPING_RATE)*(GDATA(IGUC,'GDUCUNITSIZE')*(1+(1/GDATA(IGUC,'GDCB'))$IGBPR(IGUC))/(1$((NOT IGESTO(IGUC)) AND (NOT IGESTOS(IGUC)) AND (NOT IGHSTO(IGUC)) AND (NOT IGHSTOS(IGUC))) + GDATA(IGUC,'GDSTOHUNLD')$(IGESTO(IGUC) OR IGESTOS(IGUC) OR IGHSTO(IGUC) OR IGHSTOS(IGUC)))
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost /(GDATA(IGUC,'GDFE')*(1$(NOT GEFFRATE(IA,IGUC))+GEFFRATE(IA,IGUC))))*CHRONOHOUR(S,T)
$ifi %STEPWISE_RAMPING_UC%==ramp_const_cost ;

$label  STEPWISERAMPING_NOT_SEASON_LINK_END

$label  STEPWISERAMPING_END

$ifi not %PLANNED_MAINTENANCE%==yes $goto NO_PLANNED_MAINTENANCE
EQUATION  QUCVUCON_EXISTING(Y,AAA,G,S,T)    'Unit commitment: Number of endogenous units on limited by unit size and capacity) for existing units';
EQUATION  QUCVUCON_EXISTING_STOLOAD(Y,AAA,G,S,T)    'Unit commitment: Number of endogenous units on limited by unit size and capacity) for existing storage technology units';
EQUATION  QUCVUCONMAINT(Y,AAA,G,S)    'Unit commitment: Number of endogenous units on limited by unit size and capacity) in maintenaince ';
EQUATION  QUCVUCUMAINT(Y,AAA,G,S)     'Unit commitment: Number of start up endogenous units in maintenaince on limited by unit size and capacity)';
EQUATION  QUCVUCDMAINT(Y,AAA,G,S)     'Unit commitment: Number of shut down endogenous units on in maintenaince limited by unit size and capacity)';
EQUATION  QUCSTARTQMAINT(Y,AAA,G,S)    'Unit commitment: on-off logic for units in maintenaince';
EQUATION  QUCUTMAINT(Y,AAA,G,S)     'Unit commitment: when a unit is on planned maintenaince, it lasts for a certain time';
EQUATION  QUCMAINTMIN(Y,AAA,G)     'Unit commitment: all units need to have planned maintenaince in the year for existing capacity';
EQUATION  QUCMAINTMIN_DEV(Y,AAA,G)     'Unit commitment: all units need to have planned maintenaince in the year for technologies allowed for investment and/or decommisionning';


QUCVUCON_EXISTING(IY411,IA,IGUC,IS3,T)$(GKFX(IY411,IA,IGUC) AND NOT(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC))) AND NOT(IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..
VUCON(IY411,IA,IGUC,IS3,T) + VUCONMAINT(IY411,IA,IGUC,IS3)
=L=
CEIL(GKFX(IY411,IA,IGUC)/GDATA(IGUC,'GDUCUNITSIZE'))
$include "../../base/addons/_hooks/qucvucon_existing.inc"
;

QUCVUCON_EXISTING_STOLOAD(IY411,IA,IGUC,IS3,T)$(GKFX(IY411,IA,IGUC) AND NOT(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC))) AND NOT(IGDECOMEXOPOT(IY411,IA,IGUC) AND (IGESTOALL(IGUC) OR IGHSTOALL(IGUC)) )  AND IGPLANMAINT(IGUC))..
VUCON_STOLOAD(IY411,IA,IGUC,IS3,T) + VUCONMAINT(IY411,IA,IGUC,IS3)
=L=
CEIL(GKFX(IY411,IA,IGUC)/GDATA(IGUC,'GDUCUNITSIZE'))
$include "../../base/addons/_hooks/qucvucon_existing_stoload.inc"
;

QUCVUCONMAINT(IY411,IA,IGUC,IS3)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..  !! 'Unit commitment: Number of endogenous units on limited by unit size and capacity)'
VUCONMAINT(IY411,IA,IGUC,IS3)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCUMAINT(IY411,IA,IGUC,IS3)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..  !! 'Unit commitment: Number of start up endogenous units on limited by unit size and capacity)'
VUCUMAINT(IY411,IA,IGUC,IS3)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCVUCDMAINT(IY411,IA,IGUC,IS3)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC))..  !! 'Unit commitment: Number of shut down endogenous units on limited by unit size and capacity)'
VUCDMAINT(IY411,IA,IGUC,IS3)
=L=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')
;

QUCSTARTQMAINT(IY411,IA,IGUC,S)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IS3(S) AND IGPLANMAINT(IGUC))..   !! 'Unit commitment: on-off logic'
   VUCUMAINT(IY411,IA,IGUC,S) - VUCDMAINT(IY411,IA,IGUC,S)
    =E=
   VUCONMAINT(IY411,IA,IGUC,S) - VUCONMAINT(IY411,IA,IGUC,S--1)
;

QUCUTMAINT(IAGK_HASORPOT(IY411,IA,IGUC),S)$(IS3(S) AND IGPLANMAINT(IGUC)) ..

SUM(ISALIAS$IGUCUTMAINT(IGUC,S,ISALIAS), VUCUMAINT(IY411,IA,IGUC,ISALIAS))
         =L=
         VUCONMAINT(IY411,IA,IGUC,S)
;

QUCMAINTMIN(IY411,IA,IGUC)$(GKFX(IY411,IA,IGUC) AND NOT(SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC))) AND NOT(IGDECOMEXOPOT(IY411,IA,IGUC))  AND IGPLANMAINT(IGUC))..
SUM(IS3,VUCONMAINT(IY411,IA,IGUC,IS3)*SSIZE(IS3)*WEIGHT_S(IS3))
=E=
CEIL(GKFX(IY411,IA,IGUC)/GDATA(IGUC,'GDUCUNITSIZE'))*IGPLANMAINT(IGUC)
;

QUCMAINTMIN_DEV(IY411,IA,IGUC)$((SUM(Y$(YVALUE(Y) LE YVALUE(IY411)),IAGKNY(Y,IA,IGUC)) OR IGDECOMEXOPOT(IY411,IA,IGUC)) AND IGPLANMAINT(IGUC)) ..
SUM(IS3,VUCONMAINT(IY411,IA,IGUC,IS3)*SSIZE(IS3)*WEIGHT_S(IS3))
=E=
(GKFX(IY411,IA,IGUC)
$ifi %DECOM%==yes   -VDECOM_EXO_ACCUM(IY411,IA,IGUC)$IGDECOMEXOPOT(IY411,IA,IGUC)
+VGKNACCUMNET(IY411,IA,IGUC)$(IAGK_HASORPOT(IY411,IA,IGUC) AND IAGKN(IA,IGUC)))/GDATA(IGUC,'GDUCUNITSIZE')*IGPLANMAINT(IGUC)
;

$label NO_PLANNED_MAINTENANCE


